{% extends "@WeCrea/layout/base_admin.html.twig" %}

{% block body %}
    <div class="container">
        <h4>Edition du profil de {{ artist.firstname }} {{ artist.name }} et de ses oeuvres</h4>
        <div class="row row-artist-work-custom">
            {{ form_start(editArtistForm) }}
                <div class="input-field col s12 idProfile">
                    {{ form_row(editArtistForm.id) }}
                </div>
                <div class="input-field col s12">
                    {{ form_label(editArtistForm.name, 'Nom de l\'artiste') }}
                    {{ form_errors(editArtistForm.name) }}
                    {{ form_widget(editArtistForm.name) }}
                </div>
                <div class="input-field col s12">
                    {{ form_label(editArtistForm.firstname, 'Prénom de l\'artiste') }}
                    {{ form_errors(editArtistForm.firstname) }}
                    {{ form_widget(editArtistForm.firstname) }}
                </div>
                <div class="input-field col s12">
                    {{ form_label(editArtistForm.localization, 'Localisation de l\'artiste') }}
                    {{ form_errors(editArtistForm.localization) }}
                    {{ form_widget(editArtistForm.localization) }}
                </div>
                <div class="input-field col s12">
                    {{ form_label(editArtistForm.expertise, 'Qualité') }}
                    {{ form_errors(editArtistForm.expertise) }}
                    {{ form_widget(editArtistForm.expertise) }}
                </div>
                <div class="col s12">
                    {{ form_label(editArtistForm.biography, 'Biographie de l\'artiste') }}
                </div>
                <div class="input-field col s12">
                    {{ form_errors(editArtistForm.biography) }}
                    {{ form_widget(editArtistForm.biography, {'attr': {'class':'biography'}} ) }}
                </div>
                <button class="btn waves-effect waves-light right edit-profil"  type="submit" name="action">
                    Éditer le profil
                    <i class="material-icons left">mode_edit</i>
                </button>
            {{ form_end(editArtistForm) }}
        </div>

        <div class="row">
            <h5>Images de l'artiste</h5>
                {% for image in artist.images %}
                    <div class="col s12 existent-images">
                        <img src="{{ asset('images/'~image.url) }}" id="{{ image.id }}"/>
                    </div>
                    <div class="col s12">
                        <button class="btn waves-effect waves-light red delete-artist-images">
                            Supprimer
                            <i class="material-icons left">delete</i>
                        </button>
                    </div>
            {% endfor %}
        </div>

        {{ form_start(formImage, {'attr' : {'id' : 'edit-artist-picture'}} ) }}
        <div class="row">
            <div class="file-field file-field-custom input-field col s12">
                <div class="btn">
                    <span>Choisissez un fichier</span>
                    <input type="file">
                </div>
                <div class="file-path-wrapper">
                    {{ form_widget(formImage.url, {'attr' : {'class' : 'file-path validate', 'type' : 'text'}} ) }}
                </div>
                {{ form_errors(formImage.url) }}
            </div>

            <div class="col s12" id="images-artist-check">
            </div>

            <div class="input-field col s12">
                {{ form_label(formImage.alt, "Description de la photo") }}
                {{ form_widget(formImage.alt) }}
                {{ form_errors(formImage.alt) }}
            </div>

            <div class="input-field col s12">
                <button class="btn waves-effect waves-light right black" type="submit" name="action">
                    Ajouter l'image
                    <i class="material-icons left">add</i>
                </button>
            </div>
        </div>
        {{ form_end(formImage) }}

        <div class="row">
            <div class="col s12" id="images-artist-confirmed">
                <h4>Images de l'artiste supplémentaires</h4>
            </div>
        </div>

        {% if editWorkForms is defined %}
            <h4> Les oeuvres de l'artiste </h4>
            {% for form in editWorkForms %}
                {% set id=form.id.vars.value %}
                <div class="row row-artist-work-custom">
                    {{ form_start(form) }}

                    <div class="input-field col s12 idWork">
                        {{ form_row(form.id) }}
                    </div>
                    <div class="input-field col s12">
                        <label for="title{{form.id.vars.value }}">Titre de l'oeuvre</label>
                        {{ form_errors(form.title) }}
                        {{ form_widget(form.title, {'id' : 'title'~form.id.vars.value } ) }}
                    </div>
                    <div class="col s12">
                        <label for="description{{form.id.vars.value}} " > Description </label>
                    </div>
                    <div class="input-field col s12">
                        {{ form_errors(form.description) }}
                        {{ form_widget(form.description, {'id': 'description'~id} ) }}
                    </div>
                    <div class="input-field col s12">
                        <label for="technic{{form.id.vars.value}} " > Technique utilisée </label>
                        {{ form_errors(form.technic) }}
                        {{ form_widget(form.technic, {'id': 'technic'~id} ) }}
                    </div>
                    <div class="input-field col s12">
                        <label for="timelimit{{form.id.vars.value}} " > Délai de livraison (préciser "jour(s)") </label>
                        {{ form_errors(form.timelimit) }}
                        {{ form_widget(form.timelimit, {'id': 'timelimit'~id} ) }}
                    </div>
                    <div class="input-field col s12">
                        {{ form_errors(form.nature) }}
                        {{ form_widget(form.nature, {'id': 'nature'~id} ) }}
                        <label for="nature{{form.id.vars.value}} " > Nature de l'oeuvre </label>
                    </div>

                    <div class="id" style="display: none">{{ form.id.vars.value }}</div>
                    <button class="btn waves-effect waves-light right update-work" type="submit" name="action">
                        Éditer l'oeuvre
                        <i class="material-icons left">mode_edit</i>
                    </button>
                    <button class="btn waves-effect waves-light left delete-work red" type="submit" name="action">
                        Supprimer l'oeuvre
                        <i class="material-icons left">delete</i>
                    </button>
                    {{ form_end(form) }}
                </div>
            {% endfor %}

            {% for work in works %}
                <div class="row row-custom-edit-work-image" id="work{{ work.id }}">
                    <input type="hidden" class="idWork" value="{{ work.id }}"/>
                    <h5>Image de l'oeuvre {{ work.title }}</h5>
                    {% for image in work.images %}
                        <div class="input-field col s12">
                            <img src="{{ asset('images/'~image.url) }}"/>
                            <input type="hidden" class="idImg" value="{{ image.id }}"/>
                            <input type="hidden" class="idWork" value="{{ work.id }}"/>
                        </div>
                        <div class="col s12">
                            <button class="btn waves-effect waves-light red delete-work-image" type="submit" name="action">
                                Supprimer l'image
                                <i class="material-icons left">delete</i>
                            </button>
                        </div>
                    {% endfor %}
                    <button class="btn waves-effect waves-light black right add-work-image" type="submit" name="action">
                        Ajouter une image
                        <i class="material-icons left">add</i>
                    </button>
                </div>
            {% endfor%}
        {% else %}
            <h4> Aucune oeuvre pour cet artiste </h4>
        {% endif %}

        {{ form_start(lastWorksImageForm, {'attr' : {'id' : 'add-image-form'}} ) }}
        <div class="row">
            <div class="file-field file-field-custom input-field col s12">
                <div class="btn">
                    <span>Choisissez un fichier</span>
                    <input type="file">
                </div>
                <div class="file-path-wrapper">
                    {{ form_widget(lastWorksImageForm.url, {'attr' : {'class' : 'file-path validate', 'type' : 'text'}} ) }}
                </div>
                {{ form_errors(lastWorksImageForm.url) }}
            </div>

            <div class="col s12" id="add-image-work-check">
            </div>

            <div class="input-field col s12">
                {{ form_label(lastWorksImageForm.alt, "Description de la photo") }}
                {{ form_widget(lastWorksImageForm.alt) }}
                {{ form_errors(lastWorksImageForm.alt) }}
            </div>

            <div class="input-field col s12">
                <button class="btn waves-effect waves-light right green" type="submit" name="action">
                    Ajouter l'image
                    <i class="material-icons left">done</i>
                </button>
            </div>
        </div>
        {{ form_end(lastWorksImageForm) }}

            <div class="row">
                <button class="btn waves-effect waves-light left black edit-add-work" type="submit" name="action">
                    Ajouter une oeuvre
                    <i class="material-icons left">add</i>
                </button>
            </div>

            {{ form_start(formWork, {'attr' : {'id' : 'edit-work-caracteristics' }} ) }}
            <div class="row row-artist-work-custom">
                <div class="input-field col s12 idWork">
                    {{ form_row(formWork.id) }}
                </div>
                <div class="input-field col s12">
                    {{ form_label(formWork.title, "Titre de l'oeuvre") }}
                    {{ form_widget(formWork.title) }}
                    {{ form_errors(formWork.title) }}
                </div>

                <div class="col s12">
                    {{ form_label(formWork.description, "Description de l'oeuvre") }}
                </div>
                <div class="input-field col s12">
                    {{ form_widget(formWork.title) }}
                    {{ form_errors(formWork.title) }}
                </div>
                <div class="input-field col s12">
                    {{ form_errors(formWork.description) }}
                    {{ form_widget(formWork.description, {'attr': {'class':'description'}} ) }}
                </div>
                <div class="input-field col s12">
                    {{ form_label(formWork.technic, "Technique utilisée") }}
                    {{ form_widget(formWork.technic) }}
                    {{ form_errors(formWork.technic) }}
                </div>
                <div class="input-field col s12">
                    {{ form_widget(formWork.nature) }}
                    {{ form_errors(formWork.nature) }}
                    {{ form_label(formWork.nature, "Nature de l'oeuvre") }}
                </div>
                <div>
                    {{ form_row(formWork.caracts) }}
                    <a href="#" id="add_category" class="btn btn-default">Ajouter une catégorie</a>
                </div>
            </div>
            <div class="row">
                <button class="btn waves-effect waves-light left create-work" type="submit" name="action">
                    Créer l'oeuvre
                    <i class="material-icons left">send</i>
                </button>
            </div>
            {{ form_end(formWork) }}

            {{ form_start(workImageForm, {'attr' : {'id' : 'edit-work-picture'}} ) }}
            <div class="row">
                <div class="file-field file-field-custom input-field col s12">
                    <div class="btn">
                        <span>Choisissez un fichier</span>
                        <input type="file">
                    </div>
                    <div class="file-path-wrapper">
                    {{ form_widget(workImageForm.url) }}
                    </div>
                    {{ form_errors(workImageForm.url) }}
                </div>
                <div class="col s12" id="images-work-check">
                </div>
            </div>
            <div class="row">
                <div class="input-field col s12">
                    {{ form_label(workImageForm.alt, "Description de la photo de l'oeuvre") }}
                    {{ form_widget(workImageForm.alt) }}
                    {{ form_errors(workImageForm.alt) }}
                </div>
            </div>
            <div class="row">
                <button class="btn waves-effect waves-light left" type="submit" name="action">
                    Valider la photo de l'oeuvre
                    <i class="material-icons left">done</i>
                </button>
            </div>
            {{ form_end(workImageForm) }}
            <div class="row">
                <button class="btn waves-effect waves-light right green end-work-creation" type="submit" name="action">
                    Terminer la création
                    <i class="material-icons right">done</i>
                </button>
            </div>
            <div class="row">
                <div class="col s12" id="work-confirmed">
                    <h4>Oeuvres supplémentaires</h4>
                </div>
            </div>
        </div>
    </div>
{% endblock %}
{% block javascripts %}

<script>
    $(document).ready(function(){
        /* Enables the select input in materialize */
        $('select').material_select();

        /* On récupère l'id de l'artiste et on le met dans le formulaire de l'image */
        var $idArt = $('input[id="wecreabundle_artist_id"]').attr('value');
        var $formImgArtLastChild = $('form[id="edit-artist-picture"] input[id="wecreabundle_images__token"]');

        $inputElt = $(document.createElement('input'));
        $inputElt.attr("value", "" + $idArt + "");
        $inputElt.attr("type", "hidden");
        $inputElt.attr("name", "idArt");
        $inputElt.insertBefore($formImgArtLastChild);

        var $formImgWorkLastChild = $('form[id="edit-work-caracteristics"] input[id="wecreabundle_work__token"]');
        $inputElt2 = $(document.createElement('input'));
        $inputElt2.attr("value", "" + $idArt + "");
        $inputElt2.attr("type", "hidden");
        $inputElt2.attr("name", "idArt");
        $inputElt2.insertBefore($formImgWorkLastChild);

        var $existentimages = $('.existent-images');
        $existentimages.each(function(){
            var $input = $(document.createElement('input'));
            $input.attr({
                'name' : 'idArt',
                'value' : $idArt,
                'type' : 'hidden'
            });
           $(this).append($input);
        });

        $('form[name="wecreabundle_artist"] .edit-profil').click(function(e){
            e.preventDefault();
            var $data = $(this).parent().serialize();

            $.ajax({
                method: "post",
                url: "{{ path('we_crea_admin_artist_work_edition', {id : artist.id} ) }}",
                data: $data,
                success: function(response){
                    alert(response);
                }
            });
        });

        /* if the user deletes the images already visible when the page loads. */
        $('.delete-artist-images').click(function(){
            var $idImg = $(this).parent().prev().find('img').attr('id');
            var $idArt = $(this).parent().prev().find('input').attr('value');

            var $data = {'idImg' : $idImg, 'idArt' : $idArt};

            /* Let's remove the delete button & the image deleted */
            $(this).parent().prev().remove();
            $(this).remove();

            $.ajax({
                method: 'post',
                url: "{{ path('we_crea_admin_delete_artist_image_ajax') }}",
                data : $data,
                success: function (response){
                    alert(response);
                }
            });
        });

        $("#edit-artist-picture input[id='wecreabundle_images_url']").change(function(){
            var $file = $(this)[0].files[0];
            var $img = $(document.createElement('img'));
            $img.attr('src', window.URL.createObjectURL($file));

            var $button = $(document.createElement('button'));
            $button.attr('class', 'btn waves-effect waves-light red');
            $button.text('Supprimer');

            $("#images-artist-check").append($img);
            $("#images-artist-check").append($button);

            $button.click(function(){
                $('form[id="edit-artist-picture"]').trigger('reset');
                $img.remove();
                $(this).remove();
            });
        });

        $('form[id="edit-artist-picture"]').submit(function(e){
            e.preventDefault();
            var data = new FormData($(this)[0]);
            /* We remove the preview image and reset the
             * form to enable the submission of new pictures
             */
            var $img = $("#images-artist-check").find('img');
            var $button = $("#images-artist-check").find('button');
            $img.remove();
            $button.remove();
            $(this).trigger('reset');

            /* We store the image into the database then we send it back to the client
             * We now have its id, that will be useful if the client changes its mind and
             * wants to delete it.
             */

            $.ajax({
                url: "{{ path('we_crea_admin_artist_work_creation') }}",
                method: "post",
                data: data,
                processData: false,
                contentType: false,
                success: function(response){
                    var $id = response.id;

                    var $newArtImg = $(document.createElement('div'));
                    $newArtImg.attr('class', 'new-artist-image');

                    /* Creation of the image with the data returned */
                    var $img = $(document.createElement('img'));
                    $img.attr("src", "{{ asset('images/')}}"+response.url+"");
                    $img.attr('id', ''+ $id +'');

                    /* Creation of a button to delete the image */
                    var $cancel = $(document.createElement('button'));
                    $cancel.prop('class' , 'btn waves-effect waves-light left red delete-image-artist');
                    $cancel.text("Supprimer");

                    $newArtImg.append($img);
                    $newArtImg.append($cancel);

                    $("#images-artist-confirmed").append($newArtImg);

                    $("#images-artist-confirmed").fadeIn(2000);

                    $('.delete-image-artist').click(function(e){
                        e.preventDefault();
                        $idImgToDelete = $(this).prev().attr('id');
                        $idArt = $idArt;
                        var $data = {'idImg' : $idImgToDelete, 'idArt' : $idArt};

                        /* Let's remove the delete button & the image deleted */
                        $(this).prev().remove();
                        $(this).remove();

                        $.ajax({
                            method: 'post',
                            url: "{{ path('we_crea_admin_delete_artist_image_ajax') }}",
                            data : $data,
                            success: function (response){
                                alert(response);
                            }
                        });
                    });
                }
            });
        });

        /******** ABOUT THE WORK ********/

        $('form[name="wecreabundle_work"] .update-work').click(function(e){
            e.preventDefault();
            var $data = $(this).parent().serialize();
            var id = $(this).parent().find('.id')[0].innerHTML;
            var url = "{{ path('we_crea_admin_artist_work_edition', {id : 2} ) }}";
            url = url.replace('2', id);
            $.ajax({
                method: "post",
                url: url,
                data: $data,
                success: function(response){
                    alert(response);
                }
            });
        });

        $('form[name="wecreabundle_work"] .delete-work').click(function(e){
            e.preventDefault();

            /* Let's store the work id */
            var $id = $(this).parent()[0][0].getAttribute('value');
            var $data = {idWork : $id};
            console.log($id);
            /* Let's remove this edit form */
            $(this).parent().remove();
            $('#work'+$id+'').remove();
            $.ajax({
                method: "post",
                url: "{{ path('we_crea_admin_delete_work_ajax') }}",
                data: $data,
                success: function(response){
                    alert(response);
                }
            });
        });

        $('.delete-work-image').click(function(){
           var $idImg = $(this).parent().prev().find('input[class="idImg"]').attr('value');
           var $idWork = $(this).parent().prev().find('input[class="idWork"]').attr('value');

           var $data = {idImg : $idImg, idWork : $idWork};

           /* Let's remove the image that would otherwise still be on the page without refresh */
           $(this).parent().prev().remove();
           $(this).remove();

           $.ajax({
               method: "post",
               url: "{{ path('we_crea_admin_delete_work_image_ajax') }}",
               data: $data,
               success: function(response){
                   alert(response);
               }
           });
        });

        /* if the user cliks on "adding a new work" */
        $('.edit-add-work').click(function(){
            $(this).prop('disabled', true);
            $("#edit-work-caracteristics").fadeIn(2000);
        });

        /* if the user submits a new work */
        $('form[id="edit-work-caracteristics"]').submit(function(e){
            e.preventDefault();

            if(confirm("Vous allez créer une nouvelle oeuvre.")){
                var $data = $(this).serialize();

                $(this).find('input').prop('disabled', true);
                $('.create-work').prop('disabled', true);
                $("#edit-work-picture").fadeIn(2000);

                $.ajax({
                    method: "post",
                    url: "{{ path('we_crea_admin_artist_work_creation') }}",
                    data: $data,
                    success: function(response){
                        console.log(response);
                        var $idWork = response.id;

                        var $newWork = $(document.createElement('div'));
                        $newWork.attr('class', 'new-work');

                        var $input = $(document.createElement('input'));
                        $input.attr("value", "" + $idWork + "");
                        $input.attr("type", "hidden");
                        $input.attr("name", "idWork");

                        var $pTitle = $("<h4> Titre : " + response.title + " </h4>");
                        var $pTechnic = $("<p> Technique utilisée : " + response.technic + " </p>");
                        var $pDimensions = $("<p> Dimensions : " + response.dimensions + " </p>");
                        var $pWeight = $("<p> Poids : " + response.weight + " </p>");
                        var $pQuantity = $("<p> Quantité(s) : " + response.quantity + " </p>");
                        var $pTimelimit = $("<p> Délai de livraison : " + response.timelimit + " </p>");
                        var $pPrice = $("<p> Prix : " + response.price + " € </p>");

                        $newWork.append($input);
                        $newWork.append($pTitle);
                        $newWork.append($pTechnic);
                        $newWork.append($pDimensions);
                        $newWork.append($pWeight);
                        $newWork.append($pQuantity);
                        $newWork.append($pTimelimit);
                        $newWork.append($pPrice);

                        $("#work-confirmed").append($newWork);

                        var $formImgWorkLastChild = $('form[id="edit-work-picture"] input[id="wecreabundle_images_work__token"]');
                        var $inputElt = $(document.createElement('input'));
                        $inputElt.attr("value", "" + $idWork + "");
                        $inputElt.attr("type", "hidden");
                        $inputElt.attr("name", "idWork");
                        $inputElt.insertBefore($formImgWorkLastChild);
                    }
                });
            }
        });

        /* We add a preview image instantly */
        $("#edit-work-picture input[id='wecreabundle_images_work_url']").change(function(){
            var $file = $(this)[0].files[0];
            var $img = $(document.createElement('img'));
            $img.attr('src', window.URL.createObjectURL($file));

            var $button = $(document.createElement('button'));
            $button.attr('class', 'btn waves-effect waves-light red');
            $button.text('Supprimer');

            $("#images-work-check").append($img);
            $("#images-work-check").append($button);

            $button.click(function(){
                $('form[id="edit-work-picture"]').trigger('reset');
                $img.remove();
                $(this).remove();
            });
        });

        /* if the user wants to add new pictures to an already existing work */
        $('.add-work-image').click(function(){

            /* Is there any hidden input within the image form ?
            * If so, we remove the input before adding the new one.
            * Indeed, the user can click many times on different buttons...
            * Each new click would add new hidden inputs to the form. That
            * would disable the backend treatment of the request
            */
            if($('form[id="add-image-form"]').find('input[name="idWork"]').length !==0){
                $('form[id="add-image-form"]').find('input[name="idWork"]').remove();
            }

            /* We put the id of the work that has to be completed with new images
            * if the user clicks on the button linked to the work (add-work-image)
            */
            var $idWork = $(this).parent().find('input[class="idWork"]').attr('value');
            var $lastAddImageFormChild = $('form[id="add-image-form"] #wecreabundle_images_last_work_images__token');

            $inputElt = $(document.createElement('input'));
            $inputElt.attr({
                'type' : 'hidden',
                'name' : 'idWork',
                'value' : '' + $idWork + ''
            });

            /* Let's insert the input before the token input of the Image form
            * that is to be sent
            */
            $inputElt.insertBefore($lastAddImageFormChild);

            /* Let's show the form */
            $('#add-image-form').fadeIn(2000);

            /* Move downward */
            $('html, body').animate({
                scrollTop: $('#add-image-form').offset().top-300
            });
        });

        /* Display the image before submitting the last work new image */
        $("#add-image-form input[id='wecreabundle_images_last_work_images_url']").change(function(){
            var $file = $(this)[0].files[0];
            var $img = $(document.createElement('img'));
            $img.attr('src', window.URL.createObjectURL($file));

            var $button = $(document.createElement('button'));
            $button.attr('class', 'btn waves-effect waves-light red F');
            $button.text('Supprimer');

            $("#add-image-work-check").append($img, $button);

            $button.click(function(){
                $('form[id="artist-picture"]').trigger('reset');
                $img.remove();
                $(this).remove();
            });
        });

        /* Image form linked to already existing works */
        $('form[id="add-image-form"]').submit(function(e){
            e.preventDefault();
            var $idWork = $(this).find('input[name="idWork"]').attr('value');
            var $data = new FormData($(this)[0]);
            $(this).hide();
            /* We remove the preview image and reset the
             * form to enable the submission of new pictures
             */

            var $img = $("#add-image-work-check").find('img');
            var $button = $("#add-image-work-check").find('button');
            $img.remove();
            $button.remove();
            $(this).trigger('reset');

            /* We store the image into the database then we send it back to the client
             * We now have its id, that will be useful if the client
             * changes its mind and wants to delete it.
             * Moreover, it will serve to associate the images to the artist
             * as they are created separately
             */

            $.ajax({
                method: 'post',
                url: '{{ path('we_crea_admin_artist_work_creation') }}',
                data: $data,
                contentType: false,
                processData: false,
                success: function(response){
                    var $id = response.id;

                    var $newWorkImg = $(document.createElement('div'));
                    $newWorkImg.attr('class', 'input-field col s12');

                    /* Creation of the image with the data returned */
                    var $img = $(document.createElement('img'));
                    $img.attr("src", "{{ asset('images/')}}"+response.url+"");
                    $img.attr('id', ''+ $id +'');

                    var $inputHiddenImg = $(document.createElement('input'));
                    $inputHiddenImg.attr({
                        'type' : 'hidden',
                        'class' : 'idImg',
                        'value' : '' + response.id + '',
                    });

                    /* Creation of an hidden input containing the work id */
                    var $inputHiddenWork = $(document.createElement('input'));
                    $inputHiddenWork.attr({
                        'type' : 'hidden',
                        'class' : 'idWork',
                        'value' : '' + $idWork + '',
                    });

                    $newWorkImg.append($img, $inputHiddenImg, $inputHiddenWork);

                    var $newDeleteImgButton = $(document.createElement('div'));
                    $newDeleteImgButton.attr('class', 'col s12');

                    /* Creation of a button to delete the image */
                    var $cancel = $(document.createElement('button'));
                    $cancel.attr({
                        'class': 'btn waves-effect waves-light red delete-work-image',
                        'name' : 'action',
                        'type' : 'submit'
                    });
                    $cancel.text("Supprimer L'image");

                    var $iElt = $(document.createElement('i'));
                    $iElt.attr({
                        'class' : 'material-icons left'
                    });
                    $iElt.text('delete');

                    $cancel.append($iElt);
                    $newDeleteImgButton.append($cancel);

                    /* We append the new image to the div containing all the images
                    * linked to the work
                    * We need to get the id of the work which is in the div
                    */

                    var $workPicturesContainer = $("#work"+$idWork+"");
                    var $place = $workPicturesContainer.find('.add-work-image');

                    $newWorkImg.insertBefore($place);
                    $newDeleteImgButton.insertBefore($place);
                    $newWorkImg.hide().fadeIn(2000);
                    $newDeleteImgButton.hide().fadeIn(2000);

                    $('html, body').animate({
                        scrollTop: $place.offset().top-300
                    });

                    $('.delete-work-image').click(function(e){
                        e.preventDefault();
                        var $idImg = $(this).parent().prev().find('input[class="idImg"]').attr('value');
                        var $idWork = $(this).parent().prev().find('input[class="idWork"]').attr('value');

                        var $data = {idImg : $idImg, idWork : $idWork};

                        /* Let's remove the image that would otherwise still be on the page without refresh */
                        $(this).parent().prev().remove();
                        $(this).remove();

                        $.ajax({
                            method: "post",
                            url: "{{ path('we_crea_admin_delete_work_image_ajax') }}",
                            data: $data,
                            success: function(response){
                                alert(response);
                            }
                        });
                    });
                }
            });
        });

        /* if submission of the work picture */
        $('form[id="edit-work-picture"]').submit(function(e){
            e.preventDefault();
            var $data = new FormData($(this)[0]);
            var $idWork = $(this).find('input[name="idWork"]').attr('value');

            /* We remove the preview image and reset the
             * form to enable the submission of new pictures
             */
            var $img = $("#images-work-check").find('img');
            var $button = $("#images-work-check").find('button');
            $img.remove();
            $button.remove();
            $(this).trigger('reset');

            /* We store the image into the database then we send it back to the client
             * We now have its id, that will be useful if the client
             * changes its mind and wants to delete it.
             * Moreover, it will serve to associate the images to the artist
             * as they are created separately
             */

            $.ajax({
                method: 'post',
                url: '{{ path('we_crea_admin_artist_work_creation') }}',
                data: $data,
                contentType: false,
                processData: false,
                success: function(response){
                    var $id = response.id;

                    var $newWorkImg = $(document.createElement('div'));
                    $newWorkImg.attr('class', 'new-work-image');

                    /* Creation of the image with the data returned */
                    var $img = $(document.createElement('img'));
                    $img.attr("src", "{{ asset('images/')}}"+response.url+"");
                    $img.attr('id', ''+ $id +'');

                    /* Creation of an hidden input containing the work id */
                    var $input = $(document.createElement('input'));
                    $input.attr('value' , ''+ $idWork + '');
                    $input.attr("type", "hidden");

                    /* Creation of a button to delete the image */
                    var $cancel = $(document.createElement('button'));
                    $cancel.prop('class' , 'btn waves-effect waves-light left red delete-image-work');
                    $cancel.text("Supprimer");

                    $($newWorkImg).append($img);
                    $img.hide().fadeIn(2000);

                    $($newWorkImg).append($input);
                    $input.hide().fadeIn(2000);

                    $($newWorkImg).append($cancel);
                    $cancel.hide().fadeIn(2000);

                    var $newWork = $("#work-confirmed").find('.new-work:last-child');
                    $newWork.append($newWorkImg);

                    $($newWork).show();
                    $("#work-confirmed").show();

                    $('.end-work-creation').show();

                    $('.delete-image-work').click(function(e){
                        e.preventDefault();
                        $idWork = $(this).prev().attr('value');
                        var $idImgToDelete = $(this).prev().prev().attr('id');
                        var $data = {'idImg' : $idImgToDelete, 'idWork' : $idWork};

                        /* Let's remove the delete button & the image deleted */
                        $(this).parent().remove();

                        /* If work exists, it has an id, that we send to the
                         * controller to remove the deleted image from the
                         * work entity
                         */

                        $.ajax({
                            method: 'post',
                            url: "{{ path('we_crea_admin_delete_work_image_ajax') }}",
                            data : $data,
                            success: function (response){
                                alert(response);
                            }
                        });
                    });
                }
            });
        });

        $('.end-work-creation').click(function(){
            $(this).hide();
            $("#work-picture").hide();
            $('.edit-add-work').prop('disabled', false);
            $('.create-work').prop('disabled', false);
            alert('Vous pouvez désormais créer une autre oeuvre ou quitter cette page');
            $('form[id="edit-work-caracteristics"]').trigger('reset');// check idArt tjs présent
            $('form[id="edit-work-caracteristics"]').hide();
            $('form[id="edit-work-caracteristics"]').find('input').prop('disabled', false);
            $('form[id="edit-work-picture"]').find('input[name="idWork"]').remove();

            var $deleteWork = $(document.createElement('button'));
            $deleteWork.attr('class', 'btn waves-effect waves-light left red');
            $deleteWork.text("Supprimer l'oeuvre et ses images");

            $("#work-confirmed").append($deleteWork);

            $deleteWork.click(function(){
                var $data = $(this).prev().find('input[type="hidden"]').attr('value');
                $(this).prev().remove();
                $(this).remove();

                $.ajax({
                    method: 'post',
                    url: "{{ path('we_crea_admin_delete_work_ajax') }}",
                    data: {'idWork' : $data},
                    success: function(response){
                        alert(response);
                    }
                });
            });
        });
    });
</script>
{% endblock %}