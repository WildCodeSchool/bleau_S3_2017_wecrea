{% extends "@WeCrea/layout/base_admin.html.twig" %}

{% block body %}

    <div class="container">

        <div class="row">
            <h4>Création d'un nouvel artiste</h4>
            {{ form_start(form, {'attr': {'enctype' : 'multipart/form-data' , 'class' : 'col s12', 'id' : 'artist-profil'}} ) }}
            <div class="row">
                <div class="input-field col s12">
                    {{ form_label(form.name, 'Nom de l\'artiste') }}
                    {{ form_widget(form.name) }}
                    {{ form_errors(form.name) }}
                </div>
                <div class="input-field col s12">
                    {{ form_label(form.firstname, 'Prénom de l\'artiste') }}
                    {{ form_widget(form.firstname) }}
                    {{ form_errors(form.firstname) }}
                </div>
                <div class="input-field col s12">
                    {{ form_label(form.localization, 'Localisation de l\'artiste') }}
                    {{ form_widget(form.localization) }}
                    {{ form_errors(form.localization) }}
                </div>
                <div class="input-field col s12">
                    {{ form_label(form.expertise, 'Qualité') }}
                    {{ form_widget(form.expertise) }}
                    {{ form_errors(form.expertise) }}
                </div>
                <div class="col s12">
                    {{ form_label(form.biography, 'Biographie de l\'artiste') }}
                </div>
                <div class="input-field col s12">
                    {{ form_errors(form.biography) }}
                    {{ form_widget(form.biography, {'attr': {'class':'biography'}} ) }}
                </div>
                <div class="input-field col s12">
                    <button class="btn waves-effect waves-light left" type="submit" name="action">
                        Créer le profil
                        <i class="material-icons left">send</i>
                    </button>
                </div>
            </div>
            {{ form_end(form, {'render_rest': false}) }}

            {{ form_start(formImage, {'attr' : {'id' : 'artist-picture'}} ) }}
            <div class="row">
                <div class="file-field input-field col s12">
                    <div class="btn btn-file">
                        <span>Choisissez un fichier</span>
                        <input type="file">
                    </div>
                    <div class="file-path-wrapper">
                        {{ form_widget(formImage.url, {'attr' : {'class' : 'file-path validate', 'type' : 'text'}} ) }}
                    </div>
                        {{ form_errors(formImage.url) }}
                </div>

                <div class="col s12" id="images-artist-check">
                </div>

                <div class="input-field col s12">
                    {{ form_label(formImage.alt, "Description de la photo") }}
                    {{ form_widget(formImage.alt) }}
                    {{ form_errors(formImage.alt) }}
                </div>

                <div class="input-field col s12">
                    <button class="btn waves-effect waves-light right black" type="submit" name="action">
                        Ajouter l'image
                        <i class="material-icons left">add</i>
                    </button>
                </div>
            </div>
            {{ form_end(formImage) }}

            <div class="row">
                <div class="col s12" id="images-artist-confirmed">
                    <h4>Images de l'artiste validées</h4>
                </div>
            </div>

            <div class="row">
                <button class="btn waves-effect waves-light left add-work" type="submit" name="action">
                    Ajouter une oeuvre
                    <i class="material-icons left">add</i>
                </button>
            </div>

            {{ form_start(formWork, {'attr' : {'id' : 'work-caracteristics' }} ) }}
            <div class="row">
                <div class="input-field col s12 idWork">
                    {{ form_row(formWork.id) }}
                </div>
                <div class="input-field col s12">
                    {{ form_label(formWork.title, 'Titre de l\'oeuvre') }}
                    {{ form_widget(formWork.title) }}
                    {{ form_errors(formWork.title) }}
                </div>
                <div class="col s12">
                    {{ form_label(formWork.description, "Description de l'oeuvre") }}
                </div>
                <div class="input-field col s12">
                    {{ form_errors(formWork.description) }}
                    {{ form_widget(formWork.description, {'attr': {'class':'description'}} ) }}
                </div>
                <div class="input-field col s12">
                    {{ form_label(formWork.technic, 'Technique utilisée') }}
                    {{ form_widget(formWork.technic) }}
                    {{ form_errors(formWork.technic) }}
                </div>
                <div>
                    {{ form_row(formWork.caracts) }}
                    <a href="#" id="add_category" class="btn btn-default">Ajouter une catégorie</a>

                </div>
                <div class="input-field col s12">
                    {{ form_label(formWork.timelimit, 'Délai de livraison de l\'oeuvre (préciser jour(s))') }}
                    {{ form_widget(formWork.timelimit) }}
                    {{ form_errors(formWork.timelimit) }}
                </div>

                <div class="input-field col s12">
                    {{ form_widget(formWork.nature) }}
                    {{ form_errors(formWork.nature) }}
                    {{ form_label(formWork.nature, "Nature de l'oeuvre") }}
                </div>

            </div>
            <div class="row">
                <button class="btn waves-effect waves-light left create-work" type="submit" name="action">
                    Créer l'oeuvre
                    <i class="material-icons left">send</i>
                </button>
            </div>
            {{ form_end(formWork) }}

            {{ form_start(formWorkImage, {'attr' : {'id' : 'work-picture'}} ) }}
            <div class="row">
                <div class="col s12">
                    {{ form_label(formWorkImage.url, "Photo de l'oeuvre") }}
                    {{ form_widget(formWorkImage.url) }}
                    {{ form_errors(formWorkImage.url) }}
                </div>
                <div class="col s12" id="images-work-check">
                </div>
            </div>
            <div class="row">
                <div class="input-field col s12">
                    {{ form_label(formWorkImage.alt, "Description de la photo de l'oeuvre") }}
                    {{ form_widget(formWorkImage.alt) }}
                    {{ form_errors(formWorkImage.alt) }}
                </div>
            </div>
            <div class="row">
                <button class="btn waves-effect waves-light left" type="submit" name="action">
                    Valider la photo de l'oeuvre
                    <i class="material-icons left">done</i>
                </button>
            </div>
            {{ form_end(formWorkImage) }}
            <div class="row">
                <button class="btn waves-effect waves-light right green end-work-creation" type="submit" name="action">
                    Terminer la création
                    <i class="material-icons right">done</i>
                </button>
            </div>
            <div class="row">
                <div class="col s12" id="work-confirmed">
                    <h4>Oeuvres validées</h4>
                </div>
            </div>
        </div>
    </div>
{% endblock %}
{% block javascripts %}
    {# Voici le script en question : #}
    <script type="text/javascript">
        $(document).ready(function() {
            // On récupère la balise <div> en question qui contient l'attribut « data-prototype » qui nous intéresse.
            var $container = $('div#oc_platformbundle_advert_categories');

            // On définit un compteur unique pour nommer les champs qu'on va ajouter dynamiquement
            var index = $container.find(':input').length;

            // On ajoute un nouveau champ à chaque clic sur le lien d'ajout.
            $('#add_category').click(function(e) {
                addCategory($container);

                e.preventDefault(); // évite qu'un # apparaisse dans l'URL
                return false;
            });

            // On ajoute un premier champ automatiquement s'il n'en existe pas déjà un (cas d'une nouvelle annonce par exemple).
            if (index == 0) {
                addCategory($container);
            } else {
                // S'il existe déjà des catégories, on ajoute un lien de suppression pour chacune d'entre elles
                $container.children('div').each(function() {
                    addDeleteLink($(this));
                });
            }

            // La fonction qui ajoute un formulaire CategoryType
            function addCategory($container) {
                // Dans le contenu de l'attribut « data-prototype », on remplace :
                // - le texte "__name__label__" qu'il contient par le label du champ
                // - le texte "__name__" qu'il contient par le numéro du champ
                var template = $container.attr('data-prototype')
                    .replace(/__name__label__/g, 'Catégorie n°' + (index+1))
                    .replace(/__name__/g,        index)
                ;

                // On crée un objet jquery qui contient ce template
                var $prototype = $(template);

                // On ajoute au prototype un lien pour pouvoir supprimer la catégorie
                addDeleteLink($prototype);

                // On ajoute le prototype modifié à la fin de la balise <div>
                $container.append($prototype);

                // Enfin, on incrémente le compteur pour que le prochain ajout se fasse avec un autre numéro
                index++;
            }

            // La fonction qui ajoute un lien de suppression d'une catégorie
            function addDeleteLink($prototype) {
                // Création du lien
                var $deleteLink = $('<a href="#" class="btn btn-danger">Supprimer</a>');

                // Ajout du lien
                $prototype.append($deleteLink);

                // Ajout du listener sur le clic du lien pour effectivement supprimer la catégorie
                $deleteLink.click(function(e) {
                    $prototype.remove();

                    e.preventDefault(); // évite qu'un # apparaisse dans l'URL
                    return false;
                });
            }
        });
    </script>
    <script>
    $(document).ready(function(){
        $('select').material_select();
        /* We stock the artist & work id <sand work id when created */
        var $idArt;
        var $idWork;

        /******** ABOUT THE ARTIST ********/

        $('form[id="artist-profil"]').submit(function(e){
            e.preventDefault();
            console.log($(this).serialize());
            if(confirm("Vous allez créer le profil de l'artiste.")) {
                $(this).find('button').hide();
                var $form = $(this).serialize();

                $("#artist-picture").fadeIn(2000);
                $(".add-work").fadeIn(2000);

                $.ajax({
                    method: 'post',
                    url: "{{ path('we_crea_admin_artist_work_creation') }}",
                    data: $form,
                    success: function (response) {
                        $idArt = response.id;

                        /* Add the artist id into the image form (for profile) */
                        var $formImgArtLastChild = $('form[id="artist-picture"] input[id="wecreabundle_images__token"]');
                        $inputElt = $(document.createElement('input'));
                        $inputElt.attr("value", "" + $idArt + "");
                        $inputElt.attr("type", "hidden");
                        $inputElt.attr("name", "idArt");
                        $inputElt.insertBefore($formImgArtLastChild);

                        /* Add the artist id into the work form (to link the work to the artist */
                        var $formImgWorkLastChild = $('form[id="work-caracteristics"] input[id="wecreabundle_work__token"]');
                        $inputElt2 = $(document.createElement('input'));
                        $inputElt2.attr("value", "" + $idArt + "");
                        $inputElt2.attr("type", "hidden");
                        $inputElt2.attr("name", "idArt");
                        $inputElt2.insertBefore($formImgWorkLastChild);

                        alert('Le profil a bien été créé. Pour le modifier, rendez-vous dans l\'espace édition');
                    }
                });
            }
        });

        /* We add a preview image instantly and allow deletion */
        $("#artist-picture input[id='wecreabundle_images_url']").change(function(){
            var $file = $(this)[0].files[0];
            var $img = $(document.createElement('img'));
            $img.attr('src', window.URL.createObjectURL($file));

            var $button = $(document.createElement('button'));
            $button.attr('class', 'btn waves-effect waves-light red');
            $button.text('Supprimer');

            $("#images-artist-check").append($img);
            $("#images-artist-check").append($button);

            $button.click(function(){
                $('form[id="artist-picture"]').trigger('reset');
                $img.remove();
                $(this).remove();
            });
        });

        /* If the artist image form is submitted */
        $('form[id="artist-picture"]').submit(function(e){
            e.preventDefault();
            var data = new FormData($(this)[0]);
            /* We remove the preview image and reset the
            * form to enable the submission of new pictures
            */
            var $img = $("#images-artist-check").find('img');
            var $button = $("#images-artist-check").find('button');
            $img.remove();
            $button.remove();
            $(this).trigger('reset');

            /* We store the image into the database then we send it back to the client
            * We now have its id, that will be useful if the client changes its mind and
            * wants to delete it.
            */

            $.ajax({
                url: "{{ path('we_crea_admin_artist_work_creation') }}",
                method: "post",
                data: data,
                processData: false,
                contentType: false,
                success: function(response){
                    var $id = response.id;

                    var $newArtImg = $(document.createElement('div'));
                    $newArtImg.attr('class', 'new-artist-image');

                    /* Creation of the image with the data returned */
                    var $img = $(document.createElement('img'));
                    $img.attr("src", "{{ asset('images/')}}"+response.url+"");
                    $img.attr('id', ''+ $id +'');

                    /* Creation of a button to delete the image */
                    var $cancel = $(document.createElement('button'));
                    $cancel.prop('class' , 'btn waves-effect waves-light left red delete-image-artist');
                    $cancel.text("Supprimer");

                    $newArtImg.append($img);
                    $newArtImg.append($cancel);

                    $("#images-artist-confirmed").append($newArtImg);

                    $("#images-artist-confirmed").fadeIn(2000);

                    $('.delete-image-artist').click(function(e){
                        e.preventDefault();
                        $idImgToDelete = $(this).prev().attr('id');
                        $idArt = $idArt;
                        var $data = {'idImg' : $idImgToDelete, 'idArt' : $idArt};

                        /* Let's remove the delete button & the image deleted */
                        $(this).prev().remove();
                        $(this).remove();

                        $.ajax({
                            method: 'post',
                            url: "{{ path('we_crea_admin_delete_artist_image_ajax') }}",
                            data : $data,
                            success: function (response){
                                alert(response);
                            }
                        });
                    });
                }
            });
        });

        /********* ABOUT THE WORK *********/

        $('.add-work').click(function(){
            $(this).prop('disabled', true);
            $("#work-caracteristics").fadeIn(2000);
        });

        $('form[id="work-caracteristics"]').submit(function(e){
            e.preventDefault();

            if(confirm("Vous allez créer une nouvelle oeuvre.")){
                var $data = $(this).serialize();

                $(this).find('input').prop('disabled', true);
                $('.create-work').prop('disabled', true);
                $("#work-picture").fadeIn(2000);

                $.ajax({
                    method: "post",
                    url: "{{ path('we_crea_admin_artist_work_creation') }}",
                    data: $data,
                    success: function(response){
                        console.log(response);
                        $idWork = response.id;

                        var $newWork = $(document.createElement('div'));
                        $newWork.attr('class', 'new-work');

                        var $input = $(document.createElement('input'));
                        $input.attr("value", "" + $idWork + "");
                        $input.attr("type", "hidden");
                        $input.attr("name", "idWork");

                        var $pTitle = $("<h4> Titre : " + response.title + " </h4>");
                        var $pTechnic = $("<p> Technique utilisée : " + response.technic + " </p>");
                        var $pDimensions = $("<p> Dimensions : " + response.dimensions + " </p>");
                        var $pWeight = $("<p> Poids : " + response.weight + " </p>");
                        var $pQuantity = $("<p> Quantité(s) : " + response.quantity + " </p>");
                        var $pTimelimit = $("<p> Délai de livraison : " + response.timelimit + " </p>");
                        var $pPrice = $("<p> Prix : " + response.price + " € </p>");

                        $newWork.append($input);
                        $newWork.append($pTitle);
                        $newWork.append($pTechnic);
                        $newWork.append($pDimensions);
                        $newWork.append($pWeight);
                        $newWork.append($pQuantity);
                        $newWork.append($pTimelimit);
                        $newWork.append($pPrice);

                        $("#work-confirmed").append($newWork);

                        var $formImgWorkLastChild = $('form[id="work-picture"] input[id="wecreabundle_images_work__token"]');
                        var $inputElt = $(document.createElement('input'));
                        $inputElt.attr("value", "" + $idWork + "");
                        $inputElt.attr("type", "hidden");
                        $inputElt.attr("name", "idWork");
                        $inputElt.insertBefore($formImgWorkLastChild);
                    }
                });
            }
        });

        /* We add a preview image instantly */
        $("#work-picture input[id='wecreabundle_images_work_url']").change(function(){
            var $file = $(this)[0].files[0];
            var $img = $(document.createElement('img'));
            $img.attr('src', window.URL.createObjectURL($file));

            var $button = $(document.createElement('button'));
            $button.attr('class', 'btn waves-effect waves-light left red');
            $button.text('Supprimer');

            $("#images-work-check").append($img);
            $("#images-work-check").append($button);

            $button.click(function(){
                $('form[id="work-picture"]').trigger('reset');
                $img.remove();
                $(this).remove();
            });
        });

        /* if submission of the work picture */
        $('form[id="work-picture"]').submit(function(e){
            e.preventDefault();
            var $data = new FormData($(this)[0]);

            /* We remove the preview image and reset the
             * form to enable the submission of new pictures
             */

            var $img = $("#images-work-check").find('img');
            var $button = $("#images-work-check").find('button');
            $img.remove();
            $button.remove();
            $(this).trigger('reset');

            /* We store the image into the database then we send it back to the client
             * We now have its id, that will be useful if the client
             * changes its mind and wants to delete it.
             * Moreover, it will serve to associate the images to the artist
             * as they are created separately
             */

            $.ajax({
                method: 'post',
                url: '{{ path('we_crea_admin_artist_work_creation') }}',
                data: $data,
                contentType: false,
                processData: false,
                success: function(response){
                    var $id = response.id;

                    var $newWorkImg = $(document.createElement('div'));
                    $newWorkImg.attr('class', 'new-work-image');

                    /* Creation of the image with the data returned */
                    var $img = $(document.createElement('img'));
                    $img.attr("src", "{{ asset('images/')}}"+response.url+"");
                    $img.attr('id', ''+ $id +'');

                    /* Creation of an hidden input containing the work id */
                    var $input = $(document.createElement('input'));
                    $input.attr('value' , ''+ $idWork + '');
                    $input.attr("type", "hidden");

                    /* Creation of a button to delete the image */
                    var $cancel = $(document.createElement('button'));
                    $cancel.prop('class' , 'btn waves-effect waves-light left red delete-image-work');
                    $cancel.text("Supprimer");

                    $($newWorkImg).append($img);
                    $img.hide().fadeIn(2000);

                    $($newWorkImg).append($input);
                    $input.hide().fadeIn(2000);

                    $($newWorkImg).append($cancel);
                    $cancel.hide().fadeIn(2000);

                    var $newWork = $("#work-confirmed").find('.new-work:last-child');
                    $newWork.append($newWorkImg);

                    $($newWork).show();
                    $("#work-confirmed").show();

                    $('.end-work-creation').show();

                    $('.delete-image-work').click(function(e){
                        e.preventDefault();
                        $idWork = $(this).prev().attr('value');
                        var $idImgToDelete = $(this).prev().prev().attr('id');
                        var $data = {'idImg' : $idImgToDelete, 'idWork' : $idWork};

                        /* Let's remove the delete button & the image deleted */
                        $(this).parent().remove();

                        /* If work exists, it has an id, that we send to the
                         * controller to remove the deleted image from the
                         * work entity
                         */

                        $.ajax({
                            method: 'post',
                            url: "{{ path('we_crea_admin_delete_work_image_ajax') }}",
                            data : $data,
                            success: function (response){
                                alert(response);
                            }
                        });
                    });
                }
            });
        });

        $('.end-work-creation').click(function(){
            $(this).hide();
            $("#work-picture").hide();
            $('.add-work').prop('disabled', false);
            $('.create-work').prop('disabled', false);
            alert('Vous pouvez désormais créer une autre oeuvre ou quitter cette page');
            $('form[id="work-caracteristics"]').trigger('reset');// check idArt tjs présent
            $('form[id="work-caracteristics"]').hide();
            $('form[id="work-caracteristics"]').find('input').prop('disabled', false);
            $('form[id="work-picture"]').find('input[name="idWork"]').remove();

            var $deleteWork = $(document.createElement('button'));
            $deleteWork.attr('class', 'btn waves-effect waves-light left red');
            $deleteWork.text("Supprimer l'oeuvre et ses images");

            $("#work-confirmed").append($deleteWork);

            $deleteWork.click(function(){
                var $data = $(this).prev().find('input[type="hidden"]').attr('value');
                $(this).prev().remove();
                $(this).remove();

                $.ajax({
                    method: 'post',
                    url: "{{ path('we_crea_admin_delete_work_ajax') }}",
                    data: {'idWork' : $data},
                    success: function(response){
                        alert(response);
                    }
                });
            });
        });
    });
    </script>
{% endblock %}